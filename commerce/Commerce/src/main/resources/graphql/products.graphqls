type Products {
    id: ID!
    productName: String!
    uid: Int!
    iid: String!
    quantity: Int!
    price: Float!
    available: Boolean!
}

type Cart {
    cartId: String!
}

type CartProducts {
    id: Int!
    cart: Cart!
    products: Products!
}

type Query {
    getAllProducts: [Products!]!
    getProductById(input: GetProductByIdInput!): Products
    getCartProductsByCartId(cartId: String!): [Products]!
}

input GetProductByIdInput {
    id: Int!
}

input ProductInput {
    productName: String!
    quantity: Int!
    price: Float!
    available: Boolean!
}

input ProductBasicInput {
    productName: String!
    quantity: Int!
    price: Float!
    available: Boolean!
}

type Mutation {
    createOrAddProduct(productInput: ProductInput!): Products
    createEmptyCart: Cart
    addProductToCart(cartId: String!, productId: Int!): CartProducts
}